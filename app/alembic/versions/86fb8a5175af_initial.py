"""initial

Revision ID: 86fb8a5175af
Revises: a2081e7ef2b4
Create Date: 2025-04-03 18:03:21.739195

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '86fb8a5175af'
down_revision: Union[str, None] = 'a2081e7ef2b4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('advertisement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['todo_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('todo')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('todo',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('important', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('done', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('finish_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['todo_user.id'], name='todo_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='todo_pkey')
    )
    op.drop_table('advertisement')
    # ### end Alembic commands ###
